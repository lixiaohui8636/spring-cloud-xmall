buildscript {
    ext{
        //spring boot版本
        SPRING_BOOT_VERSION = '2.2.4.RELEASE'
        //spring cloud版本
        SPRING_CLOULD_VERSION = 'Hoxton.SR5'
        //spring cloud alibaba 版本
        SPRING_CLOULD_ALIBABA_VERSION = '2.1.0.RELEASE'

        JUNIT_VERSION = '4.12'
        MYSQL_CONNECTOR_VERSION = '5.1.46'
        COMMONS_LANG3_VERSION = '3.3.2'
        COMMONS_IO_VERSION = '1.3.2'
        COMMONS_CODEC_VERSION = '1.10'
        GUAVA_VERSION = '28.2-jre'
        JWT_VERSION = '0.9.0'
        GSON_VERSION = '2.8.4'
    }
    
    // buildScript的仓库源
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    // buildScript的插件
    dependencies {
        //spring boot的插件
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${SPRING_BOOT_VERSION}")
    }
}

//所有项目的配置
allprojects {
    group 'com.lixiaohui8636.server'
    version '1.0.0'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    //限定java版本
    compileJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    //设置编码
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    //依赖管理，只做申明，并不会真正引入依赖
    dependencyManagement {

        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${SPRING_BOOT_VERSION}") }

        imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SPRING_CLOULD_VERSION}" }
    }

    //各个模块下载依赖的仓库
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    //通用依赖
    dependencies {
        //通用依赖
        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-actuator'


        compile "com.google.code.gson:gson:${GSON_VERSION}"
        compile "org.apache.commons:commons-lang3:${COMMONS_LANG3_VERSION}"
        compile "commons-io:commons-io:${COMMONS_IO_VERSION}"
        compile "commons-codec:commons-codec:${COMMONS_CODEC_VERSION}"

        //测试专用
        testCompile "junit:junit:${JUNIT_VERSION}"
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }

    bootRun {
        jvmArgs "-Dspring.profiles.active=dev"
    }
}


